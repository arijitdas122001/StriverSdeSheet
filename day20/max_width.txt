int getMaxWidth(TreeNode<int> *root)
{
    // Write your code here.
     queue<pair<TreeNode<int>*,int>>q;
        q.push({root,0});
        int maxi=INT_MIN;
        int firstind=0,lastind=0;
        while(!q.empty()){
            int sz=q.size();
            int min=q.front().second;
            for(int i=0;i<sz;i++){
             auto top=q.front();
             q.pop();
             TreeNode<int>*node=top.first;
             long long cur_min=top.second-min;
             if(i==0)firstind=cur_min;
             if(i==sz-1)lastind=cur_min;
             if(node->left){
                 q.push({node->left,2*cur_min+1});
             }
             if(node->right){
                 q.push({node->right,2*cur_min+2});
             }
            }
            maxi=max(maxi,lastind-firstind+1);
        }
        return maxi;
}