#include <bits/stdc++.h> 
/*************************************************************

    Following is the Binary Tree node structure

    class BinaryTreeNode
    {
    public :
        T data;
        BinaryTreeNode<T> *left;
        BinaryTreeNode<T> *right;

        BinaryTreeNode(T data) {
            this -> data = data;
            left = NULL;
            right = NULL;
        }
    };

*************************************************************/

vector<int> zigZagTraversal(BinaryTreeNode<int> *root)
{
    // Write your code here!
       vector<int>ans;
        if(root==NULL)return ans;
        queue<BinaryTreeNode<int> *>q;
        q.push(root);
        bool left=true;
        int mainptr=0;
        while(!q.empty()){
            int sz=q.size();
            vector<int>temp(sz);
           for(int i=0;i<sz;i++){
            BinaryTreeNode<int> *top=q.front();
            q.pop();
            int tempind=left==true?i:temp.size()-1-i;
            temp[tempind]=top->data;
            if(top->left){
                q.push(top->left);
            }
            if(top->right){
                q.push(top->right);
            }
            }
            left=!left;
            ans.resize(ans.size()+temp.size());
            for(int i=0;i<temp.size();i++){
            ans[mainptr]=temp[i];
            mainptr++;
            }
        }
    return ans;
}
