#include <bits/stdc++.h> 
vector<int> BFS(int vertex, vector<pair<int, int>> edges)
{
    // Write your code here
    vector<int>adj[vertex];
    for(auto it:edges){
        int u=it.first;
        int v=it.second;
        adj[u].push_back(v);
        adj[v].push_back(u);
    }
    vector<int>vis(vertex,0);
    vector<int>ans;
    for(int i=0;i<vertex;i++){
        sort(adj[i].begin(),adj[i].end());
    }
    for(int i=0;i<vertex;i++){
        queue<int>q;
        if(!vis[i]){
            vis[i]=1;
            q.push(i);
            while(!q.empty()){
                int top=q.front();
                q.pop();
                ans.push_back(top);
                for(auto it:adj[top]){
                    if(!vis[it]){
                        q.push(it);
                        vis[it]=1;
                    }
                }
            }
        }
    }
    return ans;
}