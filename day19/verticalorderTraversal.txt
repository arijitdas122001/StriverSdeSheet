class Solution {
public:
    vector<vector<int>> verticalTraversal(TreeNode* root) {
         map<int,map<int,multiset<int>>>storing;
         vector<vector<int>>ans;
         queue<pair<TreeNode*,pair<int,int>>>q;
        //  node,ver,level
         q.push({root,{1,0}});
         while(!q.empty()){
             int sz=q.size();
             while(sz--){
                 TreeNode*top=q.front().first;
                 int ver=q.front().second.first;
                 int level=q.front().second.second;
                q.pop();
                 storing[ver][level].insert(top->val);
                 if(top->left){
                     q.push({top->left,{ver-1,level+1}});
                 }
                 if(top->right){
                     q.push({top->right,{ver+1,level+1}});
                 }
             }
         }
         for(auto it:storing){
             vector<int>temp;
             for(auto i:it.second){
                 temp.insert(temp.end(),i.second.begin(),i.second.end());
             }
             ans.push_back(temp);
         }
return ans;
    }
};