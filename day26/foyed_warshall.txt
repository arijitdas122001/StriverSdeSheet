int floydWarshall(int n, int m, int src, int dest, vector<vector<int>> &edges) {
    // Write your code here.
    vector<vector<int>>cost(n,vector<int>(n,1e9));
    for(int i=0;i<n;i++){
        cost[i][i]=0;
    }
    for(auto it:edges){
        int u=it[0]-1;
        int v=it[1]-1;
        int wt=it[2];
        cost[u][v]=wt;
    }
   for(int via=0;via<n;via++){
       for(int i=0;i<n;i++){
        for(int j=0;j<n;j++){
          if (cost[i][via] != 1e9 && cost[via][j] != 1e9) {
            cost[i][j] = min(cost[i][j], cost[i][via] + cost[via][j]);
          }
        }
       }
   }

    return cost[src-1][dest-1];
}