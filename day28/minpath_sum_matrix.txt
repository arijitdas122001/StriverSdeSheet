#include <bits/stdc++.h> 
    int func(int row,int col,vector<vector<int>>&grid,int n,int m,vector<vector<int>>&dp){
        if(row==0 && col==0)return grid[0][0];
        if(row<0 || col<0)return 1e9;
        if(dp[row][col]!=-1)return dp[row][col];
        int up=0,left=0;
        // down->up
         up+=grid[row][col]+func(row-1,col,grid,n,m,dp);
        // right->left;
         left+=grid[row][col]+func(row,col-1,grid,n,m,dp);
         dp[row][col]=min(up,left);
        return dp[row][col];
    }
int minSumPath(vector<vector<int>> &grid) {
    // Write your code here.
      int n=grid.size();
        int m=grid[0].size();
        vector<vector<int>>dp(n,vector<int>(m,-1));
        return func(n-1,m-1,grid,n,m,dp);
}