#include <bits/stdc++.h> 
  bool ispalindrome(string s){
        int n=s.size();
        int frontptr=0,bptr=n-1;
        while(frontptr<=bptr){
            if(s[frontptr++]!=s[bptr--]){
                return false;
            }
        }
        return true;
    }
    void func(int ind,string s,vector<vector<string>>&ans,vector<string>&temp){
        int n=s.size();
        if(ind>=n){
            ans.push_back(temp);
            return;
        }
        for(int i=ind;i<n;i++){
            if(ispalindrome(s.substr(ind,i-ind+1))){
                temp.push_back(s.substr(ind,i-ind+1));
                func(i+1,s,ans,temp);
                temp.pop_back();
            }
        }
    }
vector<vector<string>> partition(string &s) 
{
    // Write your code here.
    vector<vector<string>>ans;
        vector<string>temp;
        func(0,s,ans,temp);
        return ans;
}